digraph{

# Graph style
"ordering"="out"
"rankdir"="TD"

#########
# Nodes #
#########

"Add(Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c')))), Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))))_()" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c'))))_(0,)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ΔN_v')_(0, 0)" ["color"="black", "label"="ΔN_v", "shape"="ellipse"];
"Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(0, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 1, 0, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 1, 0, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 1, 0, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(0, 1, 0, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_1')_(0, 1, 0, 2, 1)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 1, 0, 2, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 1, 0, 2, 2, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('M_f')_(0, 1, 0, 2, 2, 0, 1, 0)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 0, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 1, 0, 2, 2, 0, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 0, 1, 1, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 1, 0, 2, 2, 0, 1, 1, 2, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 0, 1, 2, 0)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 1, 0, 2, 2, 0, 1, 2, 1)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 1, 0, 2, 2, 0, 1, 2, 2)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 1, 0, 2, 2, 1)" ["color"="black", "label"="Piecewise", "shape"="ellipse"];
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 1, 0, 2, 2, 1, 0)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Rational(1, 2)_(0, 1, 0, 2, 2, 1, 0, 0, 0)" ["color"="black", "label"="1/2", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 1, 0, 2, 2, 1, 0, 0, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('C')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 1, 0, 2, 2, 1, 0, 1)" ["color"="blue", "label"="LessThan", "shape"="ellipse"];
"Symbol('C')_(0, 1, 0, 2, 2, 1, 0, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 1, 0, 2, 2, 1, 1)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"true_(0, 1, 0, 2, 2, 1, 1, 1)" ["color"="blue", "label"="True", "shape"="ellipse"];
"Integer(-1)_(0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))))_(0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(0, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Pow(Symbol('ε'), Integer(-1))_(0, 2, 1, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('ε')_(0, 2, 1, 1, 0)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(0, 2, 1, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(0, 2, 1, 2, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(0, 2, 1, 2, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 2, 1, 2, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 2, 1, 2, 0, 1, 0, 1)" ["color"="black", "label"="Piecewise", "shape"="ellipse"];
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Rational(1, 2)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 0)" ["color"="black", "label"="1/2", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('C')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1)" ["color"="blue", "label"="LessThan", "shape"="ellipse"];
"Symbol('C')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 2, 1, 2, 0, 1, 0, 1, 1)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"true_(0, 2, 1, 2, 0, 1, 0, 1, 1, 1)" ["color"="blue", "label"="True", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 2, 1, 2, 0, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('M_e')_(0, 2, 1, 2, 0, 1, 1, 1, 0)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(0, 2, 1, 2, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 1, 1, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 3, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 1, 1, 3, 1)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 1, 1, 3, 2)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 1, 1, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 1, 1, 4, 0)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(0, 2, 1, 2, 0, 1, 1, 1, 4, 1)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 1, 1, 4, 2)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 5)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 5, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 1, 1, 5, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(0, 2, 1, 2, 0, 1, 1, 1, 5, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 1, 1, 5, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(0, 2, 1, 2, 0, 1, 2)" ["color"="black", "label"="Piecewise", "shape"="ellipse"];
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(0, 2, 1, 2, 0, 1, 2, 0)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Rational(1, 2)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 0)" ["color"="black", "label"="1/2", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Symbol('ε')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 1)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('I_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2, 0)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2, 1)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('C')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Symbol('k')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0, 1)" ["color"="black", "label"="k", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 1)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 2)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 3)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 1)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1)" ["color"="blue", "label"="LessThan", "shape"="ellipse"];
"Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('C')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Symbol('k')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0, 1)" ["color"="black", "label"="k", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 2)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 3)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Symbol('ε')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('I_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2, 0)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2, 1)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 1)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(0, 2, 1, 2, 0, 1, 2, 1)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0, 1)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('Q')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 2)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 3)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Symbol('ε')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 1)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('I_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2, 0)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2, 1)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 1)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"true_(0, 2, 1, 2, 0, 1, 2, 1, 1)" ["color"="blue", "label"="True", "shape"="ellipse"];
"Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_2')_(0, 2, 1, 2, 1, 0)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(0, 2, 1, 2, 1, 1, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(0, 2, 1, 2, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(0, 2, 1, 2, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('I_e')_(0, 2, 1, 2, 2, 1)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(0, 2, 1, 2, 2, 2)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c')))_(0, 3)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('i_e')_(0, 3, 0)" ["color"="black", "label"="i_e", "shape"="ellipse"];
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 3, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('Q')_(0, 3, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(0, 3, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))))_(1,)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ΔN_v')_(1, 0)" ["color"="black", "label"="ΔN_v", "shape"="ellipse"];
"Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(1, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 1, 0, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 1, 0, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 1, 0, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 1, 0, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_1')_(1, 1, 0, 2, 1)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 1, 0, 2, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 1, 0, 2, 2, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('M_f')_(1, 1, 0, 2, 2, 0, 1, 0)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 0, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 1, 0, 2, 2, 0, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 0, 1, 1, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 1, 0, 2, 2, 0, 1, 1, 2, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 0, 1, 2, 0)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 1, 0, 2, 2, 0, 1, 2, 1)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 1, 0, 2, 2, 0, 1, 2, 2)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 1, 0, 2, 2, 1)" ["color"="black", "label"="Piecewise", "shape"="ellipse"];
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 1, 0, 2, 2, 1, 0)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Rational(1, 2)_(1, 1, 0, 2, 2, 1, 0, 0, 0)" ["color"="black", "label"="1/2", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 1, 0, 2, 2, 1, 0, 0, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('C')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 1, 0, 2, 2, 1, 0, 1)" ["color"="blue", "label"="LessThan", "shape"="ellipse"];
"Symbol('C')_(1, 1, 0, 2, 2, 1, 0, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 1, 0, 2, 2, 1, 1)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"true_(1, 1, 0, 2, 2, 1, 1, 1)" ["color"="blue", "label"="True", "shape"="ellipse"];
"Integer(-1)_(1, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))))_(1, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('i_f')_(1, 2, 0)" ["color"="black", "label"="i_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 2, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 2, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 2, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 2, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 2, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 2, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 2, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 3)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(1, 3, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('ε'), Integer(-1))_(1, 3, 0, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('ε')_(1, 3, 0, 0, 0)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(1, 3, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(1, 3, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(1, 3, 0, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 0, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 0, 1, 0, 1, 0, 1)" ["color"="black", "label"="Piecewise", "shape"="ellipse"];
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Rational(1, 2)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 0)" ["color"="black", "label"="1/2", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('C')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1)" ["color"="blue", "label"="LessThan", "shape"="ellipse"];
"Symbol('C')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 0, 1, 0, 1, 0, 1, 1)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"true_(1, 3, 0, 1, 0, 1, 0, 1, 1, 1)" ["color"="blue", "label"="True", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 0, 1, 0, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('M_e')_(1, 3, 0, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 0, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 1, 1, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 3, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 1, 1, 3, 1)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 1, 1, 3, 2)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 1, 1, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 1, 1, 4, 0)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(1, 3, 0, 1, 0, 1, 1, 1, 4, 1)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 1, 1, 4, 2)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 5)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 5, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 1, 1, 5, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 0, 1, 0, 1, 1, 1, 5, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 1, 1, 5, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(1, 3, 0, 1, 0, 1, 2)" ["color"="black", "label"="Piecewise", "shape"="ellipse"];
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(1, 3, 0, 1, 0, 1, 2, 0)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Rational(1, 2)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 0)" ["color"="black", "label"="1/2", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Symbol('ε')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 1)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('I_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2, 0)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2, 1)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('C')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Symbol('k')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0, 1)" ["color"="black", "label"="k", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 1)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 2)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 3)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 1)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1)" ["color"="blue", "label"="LessThan", "shape"="ellipse"];
"Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('C')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Symbol('k')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0, 1)" ["color"="black", "label"="k", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 2)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 3)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Symbol('ε')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('I_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2, 0)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2, 1)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 1)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(1, 3, 0, 1, 0, 1, 2, 1)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 1)" ["color"="black", "label"="M_e", "shape"="ellipse"];
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 2)" ["color"="black", "label"="f_e", "shape"="ellipse"];
"Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 3)" ["color"="black", "label"="ρ_e", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Symbol('ε')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 1)" ["color"="black", "label"="ε", "shape"="ellipse"];
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('I_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 0)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 1)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"true_(1, 3, 0, 1, 0, 1, 2, 1, 1)" ["color"="blue", "label"="True", "shape"="ellipse"];
"Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 0, 1, 1, 0)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('F_e')_(1, 3, 0, 1, 1, 1, 0)" ["color"="black", "label"="F_e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('I_e')_(1, 3, 0, 1, 2, 1)" ["color"="black", "label"="I_e", "shape"="ellipse"];
"Symbol('β_3')_(1, 3, 0, 1, 2, 2)" ["color"="black", "label"="β_3", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 3, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 2, 1)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 2, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 2, 2, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 2, 2, 0, 1, 0)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 0, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 2, 2, 0, 1, 1, 1)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 0, 1, 1, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 2, 2, 0, 1, 1, 2, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 0, 1, 1, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 0, 1, 1, 2, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 0, 1, 1, 2, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 2, 2, 0, 1, 1, 2, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 0, 1, 2, 0)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 2, 2, 0, 1, 2, 1)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 2, 2, 0, 1, 2, 2)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 2, 2, 1)" ["color"="black", "label"="Piecewise", "shape"="ellipse"];
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 2, 2, 1, 0)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Rational(1, 2)_(1, 3, 2, 2, 1, 0, 0, 0)" ["color"="black", "label"="1/2", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 0, 1)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 2, 2, 1, 0, 0, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 1, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 0, 2)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 2, 2, 1, 0, 0, 2, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 2, 2, 1, 0, 0, 2, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('C')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 0, 2, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 2, 2, 1, 0, 0, 2, 2, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 2, 2, 1, 0, 0, 2, 2, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 2, 2, 1, 0, 1)" ["color"="blue", "label"="LessThan", "shape"="ellipse"];
"Symbol('C')_(1, 3, 2, 2, 1, 0, 1, 0)" ["color"="black", "label"="C", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 2, 2, 1, 1)" ["color"="blue", "label"="ExprCondPair", "shape"="ellipse"];
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 1, 0)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 1, 0, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('T')_(1, 3, 2, 2, 1, 1, 0, 0, 0)" ["color"="black", "label"="T", "shape"="ellipse"];
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 1, 0, 0, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('M_f')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0, 1)" ["color"="black", "label"="M_f", "shape"="ellipse"];
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Symbol('ρ_c')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 0)" ["color"="black", "label"="ρ_c", "shape"="ellipse"];
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Symbol('Q')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 0)" ["color"="black", "label"="Q", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('e')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 2)" ["color"="black", "label"="e", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('d')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 1)" ["color"="black", "label"="d", "shape"="ellipse"];
"Symbol('f_f')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 2)" ["color"="black", "label"="f_f", "shape"="ellipse"];
"Symbol('ρ_f')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 3)" ["color"="black", "label"="ρ_f", "shape"="ellipse"];
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 1, 0, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 1, 0, 1, 0)" ["color"="black", "label"="Pow", "shape"="ellipse"];
"Symbol('β_1')_(1, 3, 2, 2, 1, 1, 0, 1, 0, 0)" ["color"="black", "label"="β_1", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 1, 0, 1)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 1, 0, 1, 1)" ["color"="black", "label"="Add", "shape"="ellipse"];
"Integer(1)_(1, 3, 2, 2, 1, 1, 0, 1, 1, 0)" ["color"="black", "label"="1", "shape"="ellipse"];
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1)" ["color"="black", "label"="Mul", "shape"="ellipse"];
"Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1, 0)" ["color"="black", "label"="-1", "shape"="ellipse"];
"Symbol('F_f')_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1, 1)" ["color"="black", "label"="F_f", "shape"="ellipse"];
"Symbol('β_2')_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1, 2)" ["color"="black", "label"="β_2", "shape"="ellipse"];
"true_(1, 3, 2, 2, 1, 1, 1)" ["color"="blue", "label"="True", "shape"="ellipse"];

#########
# Edges #
#########

"Add(Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c')))), Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))))_()" -> "Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c'))))_(0,)";
"Add(Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c')))), Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))))_()" -> "Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))))_(1,)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c'))))_(0,)" -> "Symbol('ΔN_v')_(0, 0)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c'))))_(0,)" -> "Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(0, 1)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c'))))_(0,)" -> "Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))))_(0, 2)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))), Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c'))))_(0,)" -> "Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c')))_(0, 3)";
"Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(0, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(0, 1, 0)";
"Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(0, 1)" -> "Integer(-1)_(0, 1, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(0, 1, 0)" -> "Integer(1)_(0, 1, 0, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(0, 1, 0)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(0, 1, 0)" -> "Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(0, 1, 0, 2)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 1)" -> "Integer(-1)_(0, 1, 0, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 1)" -> "Symbol('F_f')_(0, 1, 0, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 1)" -> "Symbol('β_2')_(0, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(0, 1, 0, 2)" -> "Integer(-1)_(0, 1, 0, 2, 0)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(0, 1, 0, 2)" -> "Symbol('β_1')_(0, 1, 0, 2, 1)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(0, 1, 0, 2)" -> "Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 1, 0, 2, 2)";
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 1, 0, 2, 2)" -> "Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 0)";
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 1, 0, 2, 2)" -> "Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 1, 0, 2, 2, 1)";
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 0)" -> "Symbol('T')_(0, 1, 0, 2, 2, 0, 0)";
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 0)" -> "Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 0, 1)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 0, 1)" -> "Symbol('M_f')_(0, 1, 0, 2, 2, 0, 1, 0)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 0, 1)" -> "Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 0, 1, 1)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 0, 1)" -> "Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 0, 1, 2)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 0, 1, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 0, 1, 1, 0)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 0, 1, 1)" -> "Symbol('ρ_c')_(0, 1, 0, 2, 2, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 0, 1, 1, 2)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 0, 1, 1, 2)" -> "Symbol('Q')_(0, 1, 0, 2, 2, 0, 1, 1, 2, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 0, 1, 1, 2)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1)" -> "Symbol('d')_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1)" -> "Symbol('e')_(0, 1, 0, 2, 2, 0, 1, 1, 2, 1, 2)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 0, 1, 2)" -> "Symbol('d')_(0, 1, 0, 2, 2, 0, 1, 2, 0)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 0, 1, 2)" -> "Symbol('f_f')_(0, 1, 0, 2, 2, 0, 1, 2, 1)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 0, 1, 2)" -> "Symbol('ρ_f')_(0, 1, 0, 2, 2, 0, 1, 2, 2)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 1, 0, 2, 2, 1)" -> "ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 1, 0, 2, 2, 1, 0)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 1, 0, 2, 2, 1)" -> "ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 1, 0, 2, 2, 1, 1)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 1, 0, 2, 2, 1, 0)" -> "Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 0)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 1, 0, 2, 2, 1, 0)" -> "LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 1, 0, 2, 2, 1, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 0)" -> "Rational(1, 2)_(0, 1, 0, 2, 2, 1, 0, 0, 0)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 0)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 0)" -> "Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 0, 2)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 0, 1)" -> "Symbol('β_1')_(0, 1, 0, 2, 2, 1, 0, 0, 1, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 0, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 1, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 0, 2)" -> "Integer(1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 0)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 0, 2)" -> "Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1)" -> "Symbol('β_1')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 0)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1)" -> "Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)" -> "Symbol('C')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 0)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)" -> "Symbol('T')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Symbol('M_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Symbol('ρ_c')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Symbol('Q')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('e')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('f_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('ρ_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2)" -> "Symbol('F_f')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2)" -> "Symbol('β_2')_(0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 2)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 1, 0, 2, 2, 1, 0, 1)" -> "Symbol('C')_(0, 1, 0, 2, 2, 1, 0, 1, 0)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 1, 0, 2, 2, 1, 0, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 0, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 0, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 0, 1, 1)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0)" -> "Symbol('T')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)" -> "Symbol('M_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)" -> "Symbol('ρ_c')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('Q')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('e')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('d')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('f_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('ρ_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)" -> "Symbol('β_1')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)" -> "Integer(1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('F_f')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('β_2')_(0, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 1, 0, 2, 2, 1, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 1, 0)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 1, 0, 2, 2, 1, 1)" -> "true_(0, 1, 0, 2, 2, 1, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 1, 0)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 1, 0, 2, 2, 1, 1, 0)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0)" -> "Symbol('T')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)" -> "Symbol('M_f')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)" -> "Symbol('ρ_c')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)" -> "Symbol('Q')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('d')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('e')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('d')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('f_f')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('ρ_f')_(0, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 1, 0, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 1, 0, 2, 2, 1, 1, 0, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0)" -> "Symbol('β_1')_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1)" -> "Integer(1)_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Integer(-1)_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Symbol('F_f')_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Symbol('β_2')_(0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 2)";
"Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))))_(0, 2)" -> "Integer(1)_(0, 2, 0)";
"Add(Integer(1), Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))))_(0, 2)" -> "Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(0, 2, 1)";
"Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(0, 2, 1)" -> "Integer(-1)_(0, 2, 1, 0)";
"Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(0, 2, 1)" -> "Pow(Symbol('ε'), Integer(-1))_(0, 2, 1, 1)";
"Mul(Integer(-1), Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(0, 2, 1)" -> "Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(0, 2, 1, 2)";
"Pow(Symbol('ε'), Integer(-1))_(0, 2, 1, 1)" -> "Symbol('ε')_(0, 2, 1, 1, 0)";
"Pow(Symbol('ε'), Integer(-1))_(0, 2, 1, 1)" -> "Integer(-1)_(0, 2, 1, 1, 1)";
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(0, 2, 1, 2)" -> "Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(0, 2, 1, 2, 0)";
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(0, 2, 1, 2)" -> "Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 1)";
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(0, 2, 1, 2)" -> "Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 2)";
"Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(0, 2, 1, 2, 0)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 0)";
"Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(0, 2, 1, 2, 0)" -> "Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(0, 2, 1, 2, 0, 1)";
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(0, 2, 1, 2, 0, 1)" -> "Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 2, 1, 2, 0, 1, 0)";
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(0, 2, 1, 2, 0, 1)" -> "Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 1)";
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(0, 2, 1, 2, 0, 1)" -> "Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(0, 2, 1, 2, 0, 1, 2)";
"Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 2, 1, 2, 0, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 0)";
"Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(0, 2, 1, 2, 0, 1, 0)" -> "Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 2, 1, 2, 0, 1, 0, 1)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 2, 1, 2, 0, 1, 0, 1)" -> "ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(0, 2, 1, 2, 0, 1, 0, 1)" -> "ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 2, 1, 2, 0, 1, 0, 1, 1)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0)" -> "Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0)" -> "LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0)" -> "Rational(1, 2)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 0)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0)" -> "Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2)" -> "Integer(1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 0)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2)" -> "Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 0)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1)" -> "Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1)" -> "Symbol('C')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 0)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)" -> "Symbol('T')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Symbol('M_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('e')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('f_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 0, 2, 2, 2)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1)" -> "Symbol('C')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0)" -> "Symbol('T')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Symbol('M_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('e')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('f_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1)" -> "Integer(1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 2, 1, 2, 0, 1, 0, 1, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(0, 2, 1, 2, 0, 1, 0, 1, 1)" -> "true_(0, 2, 1, 2, 0, 1, 0, 1, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0)" -> "Symbol('T')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0)" -> "Symbol('M_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('e')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Symbol('f_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Integer(1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 0, 1, 1, 0, 1, 1, 1, 2)";
"Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 1)" -> "Symbol('T')_(0, 2, 1, 2, 0, 1, 1, 0)";
"Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(0, 2, 1, 2, 0, 1, 1)" -> "Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)" -> "Symbol('M_e')_(0, 2, 1, 2, 0, 1, 1, 1, 0)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 1)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 1, 1, 2)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 1, 1, 3)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)" -> "Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 1, 1, 4)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(0, 2, 1, 2, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 5)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 1)" -> "Symbol('M_f')_(0, 2, 1, 2, 0, 1, 1, 1, 1, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 1, 1, 2)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(0, 2, 1, 2, 0, 1, 1, 1, 2)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1)" -> "Symbol('e')_(0, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1, 2)";
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 1, 1, 3)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 3, 0)";
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 1, 1, 3)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 1, 1, 3, 1)";
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 1, 1, 3)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 1, 1, 3, 2)";
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 1, 1, 4)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 1, 1, 4, 0)";
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 1, 1, 4)" -> "Symbol('f_e')_(0, 2, 1, 2, 0, 1, 1, 1, 4, 1)";
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 1, 1, 4)" -> "Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 1, 1, 4, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 5)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 1, 1, 5, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 5)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 1, 1, 5, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 5)" -> "Symbol('f_f')_(0, 2, 1, 2, 0, 1, 1, 1, 5, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(0, 2, 1, 2, 0, 1, 1, 1, 5)" -> "Symbol('ρ_f')_(0, 2, 1, 2, 0, 1, 1, 1, 5, 3)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(0, 2, 1, 2, 0, 1, 2)" -> "ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(0, 2, 1, 2, 0, 1, 2, 0)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(0, 2, 1, 2, 0, 1, 2)" -> "ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(0, 2, 1, 2, 0, 1, 2, 1)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(0, 2, 1, 2, 0, 1, 2, 0)" -> "Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(0, 2, 1, 2, 0, 1, 2, 0)" -> "LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0)" -> "Rational(1, 2)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 0)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0)" -> "Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 1, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)" -> "Integer(1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 0)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)" -> "Symbol('ε')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)" -> "Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)" -> "Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2)" -> "Symbol('I_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2, 0)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2)" -> "Symbol('β_3')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 2, 1)";
"Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 0)";
"Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3)" -> "Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1)";
"Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1)" -> "Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0)";
"Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1)";
"Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0)" -> "Symbol('C')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0, 0)";
"Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0)" -> "Symbol('k')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1)" -> "Symbol('T')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1)" -> "Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" -> "Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)" -> "Symbol('M_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 1)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 0)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Symbol('f_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 3)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 4, 2)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 0)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 1)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2)" -> "Symbol('F_e')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2)" -> "Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 0, 2, 5, 2, 1, 1)";
"LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1)" -> "Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0)";
"LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1)";
"Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0)" -> "Symbol('C')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0, 0)";
"Mul(Symbol('C'), Symbol('k'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0)" -> "Symbol('k')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 0, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0)" -> "Symbol('T')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0)" -> "Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1)" -> "Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0)" -> "Symbol('M_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 0, 1)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1, 0)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Symbol('f_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1)" -> "Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 0, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Integer(1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 0)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Symbol('ε')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2)" -> "Symbol('I_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2, 0)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2)" -> "Symbol('β_3')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 3, 2)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 0)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 1)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)" -> "Symbol('F_e')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)" -> "Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 1)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(0, 2, 1, 2, 0, 1, 2, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(0, 2, 1, 2, 0, 1, 2, 1)" -> "true_(0, 2, 1, 2, 0, 1, 2, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0)" -> "Symbol('T')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0)" -> "Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1)" -> "Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0)" -> "Symbol('M_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 0, 1)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1)" -> "Symbol('Q')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1, 0)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1)" -> "Symbol('ρ_c')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Symbol('d')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Symbol('f_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Symbol('ρ_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1)" -> "Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0)" -> "Symbol('β_1')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 0, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1)" -> "Integer(1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 0)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1)" -> "Symbol('ε')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1)" -> "Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2)" -> "Symbol('I_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2, 0)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2)" -> "Symbol('β_3')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 3, 2)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 0)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4)" -> "Symbol('β_2')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 1)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2)" -> "Symbol('F_e')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2)" -> "Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)" -> "Integer(-1)_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)" -> "Symbol('F_f')_(0, 2, 1, 2, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 1)";
"Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 1)" -> "Symbol('β_2')_(0, 2, 1, 2, 1, 0)";
"Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(0, 2, 1, 2, 1)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 1, 1)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 1, 1)" -> "Symbol('F_e')_(0, 2, 1, 2, 1, 1, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(0, 2, 1, 2, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 1, 1, 1)" -> "Integer(-1)_(0, 2, 1, 2, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(0, 2, 1, 2, 1, 1, 1)" -> "Symbol('F_f')_(0, 2, 1, 2, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 2)" -> "Integer(-1)_(0, 2, 1, 2, 2, 0)";
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 2)" -> "Symbol('I_e')_(0, 2, 1, 2, 2, 1)";
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(0, 2, 1, 2, 2)" -> "Symbol('β_3')_(0, 2, 1, 2, 2, 2)";
"Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c')))_(0, 3)" -> "Symbol('i_e')_(0, 3, 0)";
"Add(Symbol('i_e'), Mul(Symbol('Q'), Symbol('ρ_c')))_(0, 3)" -> "Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 3, 1)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 3, 1)" -> "Symbol('Q')_(0, 3, 1, 0)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(0, 3, 1)" -> "Symbol('ρ_c')_(0, 3, 1, 1)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))))_(1,)" -> "Symbol('ΔN_v')_(1, 0)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))))_(1,)" -> "Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(1, 1)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))))_(1,)" -> "Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))))_(1, 2)";
"Mul(Symbol('ΔN_v'), Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1)), Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))), Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))))_(1,)" -> "Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 3)";
"Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(1, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 1, 0)";
"Pow(Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))), Integer(-1))_(1, 1)" -> "Integer(-1)_(1, 1, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 1, 0)" -> "Integer(1)_(1, 1, 0, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 1, 0)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 1, 0)" -> "Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 1, 0, 2)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 1)" -> "Integer(-1)_(1, 1, 0, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 1)" -> "Symbol('F_f')_(1, 1, 0, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 1)" -> "Symbol('β_2')_(1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 1, 0, 2)" -> "Integer(-1)_(1, 1, 0, 2, 0)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 1, 0, 2)" -> "Symbol('β_1')_(1, 1, 0, 2, 1)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 1, 0, 2)" -> "Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 1, 0, 2, 2)";
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 1, 0, 2, 2)" -> "Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 0)";
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 1, 0, 2, 2)" -> "Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 1, 0, 2, 2, 1)";
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 0)" -> "Symbol('T')_(1, 1, 0, 2, 2, 0, 0)";
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 0)" -> "Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 0, 1)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 0, 1)" -> "Symbol('M_f')_(1, 1, 0, 2, 2, 0, 1, 0)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 0, 1)" -> "Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 0, 1, 1)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 0, 1)" -> "Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 0, 1, 2)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 0, 1, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 0, 1, 1, 0)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 1, 0, 2, 2, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 0, 1, 1, 2)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 0, 1, 1, 2)" -> "Symbol('Q')_(1, 1, 0, 2, 2, 0, 1, 1, 2, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 0, 1, 1, 2)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1)" -> "Symbol('d')_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1)" -> "Symbol('e')_(1, 1, 0, 2, 2, 0, 1, 1, 2, 1, 2)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 0, 1, 2)" -> "Symbol('d')_(1, 1, 0, 2, 2, 0, 1, 2, 0)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 0, 1, 2)" -> "Symbol('f_f')_(1, 1, 0, 2, 2, 0, 1, 2, 1)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 1, 0, 2, 2, 0, 1, 2, 2)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 1, 0, 2, 2, 1)" -> "ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 1, 0, 2, 2, 1, 0)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 1, 0, 2, 2, 1)" -> "ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 1, 0, 2, 2, 1, 1)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 1, 0, 2, 2, 1, 0)" -> "Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 0)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 1, 0, 2, 2, 1, 0)" -> "LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 1, 0, 2, 2, 1, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 0)" -> "Rational(1, 2)_(1, 1, 0, 2, 2, 1, 0, 0, 0)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 0)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 0)" -> "Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 0, 2)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 0, 1)" -> "Symbol('β_1')_(1, 1, 0, 2, 2, 1, 0, 0, 1, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 0, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 1, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 0, 2)" -> "Integer(1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 0)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 0, 2)" -> "Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1)" -> "Symbol('β_1')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 0)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1)" -> "Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)" -> "Symbol('C')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 0)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)" -> "Symbol('T')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Symbol('M_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Symbol('ρ_c')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Symbol('Q')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('e')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('f_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('ρ_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2)" -> "Symbol('F_f')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2)" -> "Symbol('β_2')_(1, 1, 0, 2, 2, 1, 0, 0, 2, 2, 2)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 1, 0, 2, 2, 1, 0, 1)" -> "Symbol('C')_(1, 1, 0, 2, 2, 1, 0, 1, 0)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 1, 0, 2, 2, 1, 0, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 0, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 0, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 0, 1, 1)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0)" -> "Symbol('T')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0)" -> "Symbol('M_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('Q')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('e')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('d')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('f_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)" -> "Symbol('β_1')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)" -> "Integer(1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('F_f')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('β_2')_(1, 1, 0, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 1, 0, 2, 2, 1, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 1, 0)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 1, 0, 2, 2, 1, 1)" -> "true_(1, 1, 0, 2, 2, 1, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 1, 0)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 1, 0, 2, 2, 1, 1, 0)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0)" -> "Symbol('T')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0)" -> "Symbol('M_f')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)" -> "Symbol('Q')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('d')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('e')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('d')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('f_f')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 1, 0, 2, 2, 1, 1, 0, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 1, 0, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 1, 0, 2, 2, 1, 1, 0, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0)" -> "Symbol('β_1')_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1)" -> "Integer(1)_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Integer(-1)_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Symbol('F_f')_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Symbol('β_2')_(1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 2)";
"Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))))_(1, 2)" -> "Symbol('i_f')_(1, 2, 0)";
"Add(Symbol('i_f'), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))))_(1, 2)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 2, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 2, 1)" -> "Symbol('ρ_c')_(1, 2, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 2, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 2, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 2, 1, 1)" -> "Symbol('Q')_(1, 2, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 2, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 2, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 2, 1, 1, 1)" -> "Integer(-1)_(1, 2, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 2, 1, 1, 1)" -> "Symbol('d')_(1, 2, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 2, 1, 1, 1)" -> "Symbol('e')_(1, 2, 1, 1, 1, 2)";
"Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 3)" -> "Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(1, 3, 0)";
"Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 3)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 1)";
"Add(Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))))_(1, 3)" -> "Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 3, 2)";
"Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(1, 3, 0)" -> "Pow(Symbol('ε'), Integer(-1))_(1, 3, 0, 0)";
"Mul(Pow(Symbol('ε'), Integer(-1)), Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))))_(1, 3, 0)" -> "Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(1, 3, 0, 1)";
"Pow(Symbol('ε'), Integer(-1))_(1, 3, 0, 0)" -> "Symbol('ε')_(1, 3, 0, 0, 0)";
"Pow(Symbol('ε'), Integer(-1))_(1, 3, 0, 0)" -> "Integer(-1)_(1, 3, 0, 0, 1)";
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(1, 3, 0, 1)" -> "Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(1, 3, 0, 1, 0)";
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(1, 3, 0, 1)" -> "Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 1)";
"Add(Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))), Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))), Mul(Integer(-1), Symbol('I_e'), Symbol('β_3')))_(1, 3, 0, 1)" -> "Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 2)";
"Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(1, 3, 0, 1, 0)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 0)";
"Mul(Symbol('β_1'), Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))))_(1, 3, 0, 1, 0)" -> "Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(1, 3, 0, 1, 0, 1)";
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(1, 3, 0, 1, 0, 1)" -> "Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 0, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(1, 3, 0, 1, 0, 1)" -> "Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))), Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)))_(1, 3, 0, 1, 0, 1)" -> "Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(1, 3, 0, 1, 0, 1, 2)";
"Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 0, 1, 0, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 0, 1, 0, 1, 0)" -> "Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 0, 1, 0, 1, 0, 1)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 0, 1, 0, 1, 0, 1)" -> "ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 0, 1, 0, 1, 0, 1)" -> "ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 0, 1, 0, 1, 0, 1, 1)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0)" -> "Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0)" -> "LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0)" -> "Rational(1, 2)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 0)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0)" -> "Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2)" -> "Integer(1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2)" -> "Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 0)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1)" -> "Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1)" -> "Symbol('C')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 0)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)" -> "Symbol('T')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Symbol('M_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('e')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('f_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 0, 2, 2, 2)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1)" -> "Symbol('C')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 0)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)" -> "Symbol('T')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Symbol('M_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('e')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('f_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1)" -> "Integer(1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 0, 1, 0, 1, 0, 1, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 0, 1, 0, 1, 0, 1, 1)" -> "true_(1, 3, 0, 1, 0, 1, 0, 1, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0)" -> "Symbol('T')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0)" -> "Symbol('M_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('e')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Symbol('f_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Integer(1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 2)";
"Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 1)" -> "Symbol('T')_(1, 3, 0, 1, 0, 1, 1, 0)";
"Mul(Symbol('T'), Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 0, 1, 0, 1, 1)" -> "Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)" -> "Symbol('M_e')_(1, 3, 0, 1, 0, 1, 1, 1, 0)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 1)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 1, 1, 2)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 1, 1, 3)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)" -> "Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 1, 1, 4)";
"Add(Symbol('M_e'), Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c')), Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e')), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 0, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 5)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 1)" -> "Symbol('M_f')_(1, 3, 0, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 1, 1, 2)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 0, 1, 0, 1, 1, 1, 2)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1)" -> "Symbol('e')_(1, 3, 0, 1, 0, 1, 1, 1, 2, 1, 1, 2)";
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 1, 1, 3)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 3, 0)";
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 1, 1, 3)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 1, 1, 3, 1)";
"Mul(Integer(-1), Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 1, 1, 3)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 1, 1, 3, 2)";
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 1, 1, 4)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 1, 1, 4, 0)";
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 1, 1, 4)" -> "Symbol('f_e')_(1, 3, 0, 1, 0, 1, 1, 1, 4, 1)";
"Mul(Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 1, 1, 4)" -> "Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 1, 1, 4, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 5)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 1, 1, 5, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 5)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 1, 1, 5, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 5)" -> "Symbol('f_f')_(1, 3, 0, 1, 0, 1, 1, 1, 5, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 0, 1, 0, 1, 1, 1, 5)" -> "Symbol('ρ_f')_(1, 3, 0, 1, 0, 1, 1, 1, 5, 3)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(1, 3, 0, 1, 0, 1, 2)" -> "ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(1, 3, 0, 1, 0, 1, 2, 0)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true))_(1, 3, 0, 1, 0, 1, 2)" -> "ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(1, 3, 0, 1, 0, 1, 2, 1)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(1, 3, 0, 1, 0, 1, 2, 0)" -> "Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))), LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))))_(1, 3, 0, 1, 0, 1, 2, 0)" -> "LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0)" -> "Rational(1, 2)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 0)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0)" -> "Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 1, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)" -> "Integer(1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 0)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)" -> "Symbol('ε')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)" -> "Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)" -> "Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2)" -> "Symbol('I_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2, 0)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2)" -> "Symbol('β_3')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 2, 1)";
"Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 0)";
"Mul(Symbol('β_1'), Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3)" -> "Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1)";
"Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1)" -> "Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0)";
"Add(Mul(Symbol('C'), Symbol('k')), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1)";
"Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0)" -> "Symbol('C')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0, 0)";
"Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0)" -> "Symbol('k')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1)" -> "Symbol('T')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1)" -> "Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" -> "Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0)" -> "Symbol('M_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 0, 1)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 0)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Symbol('f_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2)" -> "Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 3, 1, 1, 1, 2, 3)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 4, 2)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 0)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 1)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2)" -> "Symbol('F_e')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2)" -> "Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 0, 2, 5, 2, 1, 1)";
"LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1)" -> "Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0)";
"LessThan(Mul(Symbol('C'), Symbol('k')), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1)";
"Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0)" -> "Symbol('C')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0, 0)";
"Mul(Symbol('C'), Symbol('k'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0)" -> "Symbol('k')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 0, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0)" -> "Symbol('T')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0)" -> "Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1)" -> "Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0)" -> "Symbol('M_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 0, 1)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1, 0)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Symbol('f_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2)" -> "Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1)" -> "Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 0, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Integer(1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 0)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Symbol('ε')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2)" -> "Symbol('I_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2, 0)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2)" -> "Symbol('β_3')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 3, 2)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 0)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 1)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)" -> "Symbol('F_e')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2)" -> "Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 0, 1, 1, 1, 1, 4, 2, 1, 1)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(1, 3, 0, 1, 0, 1, 2, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))), true)_(1, 3, 0, 1, 0, 1, 2, 1)" -> "true_(1, 3, 0, 1, 0, 1, 2, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0)" -> "Symbol('T')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0)" -> "Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1)" -> "Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_e')), Mul(Symbol('Q'), Symbol('ρ_c')), Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0)" -> "Symbol('M_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 0, 1)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1)" -> "Symbol('Q')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1, 0)";
"Mul(Symbol('Q'), Symbol('ρ_c'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Symbol('d')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Symbol('f_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_e'), Symbol('ρ_e'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2)" -> "Symbol('ρ_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1)" -> "Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0)" -> "Symbol('β_1')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 0, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1)" -> "Integer(1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 0)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1)" -> "Symbol('ε')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 1)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1)" -> "Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3)";
"Add(Integer(1), Symbol('ε'), Mul(Symbol('I_e'), Symbol('β_3')), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')), Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2)" -> "Symbol('I_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 0)";
"Mul(Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2)" -> "Symbol('β_3')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 3, 2)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 0)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4)" -> "Symbol('β_2')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 1)";
"Mul(Integer(-1), Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2)" -> "Symbol('F_e')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2)" -> "Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)" -> "Integer(-1)_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1)" -> "Symbol('F_f')_(1, 3, 0, 1, 0, 1, 2, 1, 0, 1, 1, 4, 2, 1, 1)";
"Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 1)" -> "Symbol('β_2')_(1, 3, 0, 1, 1, 0)";
"Mul(Symbol('β_2'), Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f'))))_(1, 3, 0, 1, 1)" -> "Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 1, 1)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 1, 1)" -> "Symbol('F_e')_(1, 3, 0, 1, 1, 1, 0)";
"Add(Symbol('F_e'), Mul(Integer(-1), Symbol('F_f')))_(1, 3, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'))_(1, 3, 0, 1, 1, 1, 1)" -> "Symbol('F_f')_(1, 3, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 2)" -> "Integer(-1)_(1, 3, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 2)" -> "Symbol('I_e')_(1, 3, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('I_e'), Symbol('β_3'))_(1, 3, 0, 1, 2)" -> "Symbol('β_3')_(1, 3, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 1)" -> "Integer(-1)_(1, 3, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 1)" -> "Symbol('F_f')_(1, 3, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 1)" -> "Symbol('β_2')_(1, 3, 1, 2)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 3, 2)" -> "Integer(-1)_(1, 3, 2, 0)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 3, 2)" -> "Symbol('β_1')_(1, 3, 2, 1)";
"Mul(Integer(-1), Symbol('β_1'), Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))))_(1, 3, 2)" -> "Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 2, 2)";
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 2, 2)" -> "Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 0)";
"Add(Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)))_(1, 3, 2, 2)" -> "Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 2, 2, 1)";
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 0)" -> "Symbol('T')_(1, 3, 2, 2, 0, 0)";
"Mul(Symbol('T'), Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 0)" -> "Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 0, 1)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 0, 1)" -> "Symbol('M_f')_(1, 3, 2, 2, 0, 1, 0)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 0, 1)" -> "Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 0, 1, 1)";
"Add(Symbol('M_f'), Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 0, 1)" -> "Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 0, 1, 2)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 0, 1, 1)" -> "Integer(-1)_(1, 3, 2, 2, 0, 1, 1, 0)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 2, 2, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 0, 1, 1, 2)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 0, 1, 1, 2)" -> "Symbol('Q')_(1, 3, 2, 2, 0, 1, 1, 2, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 0, 1, 1, 2)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 0, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 0, 1, 1, 2, 1)" -> "Integer(-1)_(1, 3, 2, 2, 0, 1, 1, 2, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 0, 1, 1, 2, 1)" -> "Symbol('d')_(1, 3, 2, 2, 0, 1, 1, 2, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 0, 1, 1, 2, 1)" -> "Symbol('e')_(1, 3, 2, 2, 0, 1, 1, 2, 1, 2)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 0, 1, 2)" -> "Symbol('d')_(1, 3, 2, 2, 0, 1, 2, 0)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 0, 1, 2)" -> "Symbol('f_f')_(1, 3, 2, 2, 0, 1, 2, 1)";
"Mul(Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 3, 2, 2, 0, 1, 2, 2)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 2, 2, 1)" -> "ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 2, 2, 1, 0)";
"Piecewise(ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))), ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true))_(1, 3, 2, 2, 1)" -> "ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 2, 2, 1, 1)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 2, 2, 1, 0)" -> "Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 0)";
"ExprCondPair(Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))), LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))))_(1, 3, 2, 2, 1, 0)" -> "LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 2, 2, 1, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 0)" -> "Rational(1, 2)_(1, 3, 2, 2, 1, 0, 0, 0)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 0)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 0, 1)";
"Mul(Rational(1, 2), Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 0)" -> "Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 0, 2)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 0, 1)" -> "Symbol('β_1')_(1, 3, 2, 2, 1, 0, 0, 1, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 0, 1)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 1, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 0, 2)" -> "Integer(1)_(1, 3, 2, 2, 1, 0, 0, 2, 0)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 0, 2)" -> "Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 2, 2, 1, 0, 0, 2, 1)";
"Add(Integer(1), Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 0, 2)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 0, 2, 2)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 2, 2, 1, 0, 0, 2, 1)" -> "Symbol('β_1')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 0)";
"Mul(Symbol('β_1'), Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))))_(1, 3, 2, 2, 1, 0, 0, 2, 1)" -> "Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1)" -> "Symbol('C')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 0)";
"Add(Symbol('C'), Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1)" -> "Symbol('T')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0)" -> "Symbol('M_f')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Symbol('Q')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('d')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1)" -> "Symbol('e')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('d')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('f_f')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2)" -> "Symbol('ρ_f')_(1, 3, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 2, 3)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 0, 2, 2)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 0, 2, 2, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 0, 2, 2)" -> "Symbol('F_f')_(1, 3, 2, 2, 1, 0, 0, 2, 2, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 0, 2, 2)" -> "Symbol('β_2')_(1, 3, 2, 2, 1, 0, 0, 2, 2, 2)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 2, 2, 1, 0, 1)" -> "Symbol('C')_(1, 3, 2, 2, 1, 0, 1, 0)";
"LessThan(Symbol('C'), Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))))_(1, 3, 2, 2, 1, 0, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 0, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 0, 1, 1)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 0, 1, 1)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 1, 1, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0)" -> "Symbol('T')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0)" -> "Symbol('M_f')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Symbol('Q')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('d')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1)" -> "Symbol('e')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('d')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('f_f')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 3, 2, 2, 1, 0, 1, 1, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 1, 1, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 0, 1, 1, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0)" -> "Symbol('β_1')_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1)" -> "Integer(1)_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('F_f')_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1)" -> "Symbol('β_2')_(1, 3, 2, 2, 1, 0, 1, 1, 1, 1, 1, 2)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 2, 2, 1, 1)" -> "Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 1, 0)";
"ExprCondPair(Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))), true)_(1, 3, 2, 2, 1, 1)" -> "true_(1, 3, 2, 2, 1, 1, 1)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 1, 0)" -> "Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 1, 0, 0)";
"Add(Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))), Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))))_(1, 3, 2, 2, 1, 1, 0)" -> "Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 1, 0, 1)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 1, 0, 0)" -> "Symbol('T')_(1, 3, 2, 2, 1, 1, 0, 0, 0)";
"Mul(Symbol('T'), Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))))_(1, 3, 2, 2, 1, 1, 0, 0)" -> "Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 1, 0, 0, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1)";
"Add(Mul(Integer(-1), Symbol('M_f')), Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))), Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f')))_(1, 3, 2, 2, 1, 1, 0, 0, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0)" -> "Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0, 0)";
"Mul(Integer(-1), Symbol('M_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0)" -> "Symbol('M_f')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 0, 1)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1)" -> "Symbol('ρ_c')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 0)";
"Mul(Symbol('ρ_c'), Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e'))))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1)" -> "Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1)" -> "Symbol('Q')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 0)";
"Add(Symbol('Q'), Mul(Integer(-1), Symbol('d'), Symbol('e')))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1)" -> "Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('d')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('e'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1)" -> "Symbol('e')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 0)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('d')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 1)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('f_f')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 2)";
"Mul(Integer(-1), Symbol('d'), Symbol('f_f'), Symbol('ρ_f'))_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2)" -> "Symbol('ρ_f')_(1, 3, 2, 2, 1, 1, 0, 0, 1, 2, 3)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 1, 0, 1)" -> "Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 1, 0, 1, 0)";
"Mul(Pow(Symbol('β_1'), Integer(-1)), Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))))_(1, 3, 2, 2, 1, 1, 0, 1)" -> "Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 1, 0, 1, 1)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 1, 0, 1, 0)" -> "Symbol('β_1')_(1, 3, 2, 2, 1, 1, 0, 1, 0, 0)";
"Pow(Symbol('β_1'), Integer(-1))_(1, 3, 2, 2, 1, 1, 0, 1, 0)" -> "Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 1, 0, 1)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 1, 0, 1, 1)" -> "Integer(1)_(1, 3, 2, 2, 1, 1, 0, 1, 1, 0)";
"Add(Integer(1), Mul(Integer(-1), Symbol('F_f'), Symbol('β_2')))_(1, 3, 2, 2, 1, 1, 0, 1, 1)" -> "Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Integer(-1)_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1, 0)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Symbol('F_f')_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1, 1)";
"Mul(Integer(-1), Symbol('F_f'), Symbol('β_2'))_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1)" -> "Symbol('β_2')_(1, 3, 2, 2, 1, 1, 0, 1, 1, 1, 2)";
}
